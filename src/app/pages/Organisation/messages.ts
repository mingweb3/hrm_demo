/**
 * This file is only need if you want to extract messages into JSON files in locales folder
 * AND if you are also using the object syntax instead of string syntax. \
 * Check the documentation section i18n for details
 */
import { translations } from '@/locales/translations'
import { _t } from '@/utils/messages'

export const messages = {
  Dashboard: () => _t(translations.common.Dashboard),
  submit: () => _t(translations.common.Submit),
  filter: () => _t(translations.common.filter),
  filterData: () => _t(translations.common.filter_data),
  clear: () => _t(translations.common.clear),
  cancel: () => _t(translations.common.cancel),
  close: () => _t(translations.common.close),
  Create: () => _t(translations.common.Create),
  Update: () => _t(translations.common.update),
  CreateNewSuccess: () => _t(translations.common.CreateNewSuccess),
  UpdateSuccess: () => _t(translations.common.UpdateSuccess),
  'Organization details': () => _t(translations.organization['Organization details']),
  'Create new location': () => _t(translations.organization['Create new location']),
  EditLocation: () => _t(translations.organization.EditLocation),
  location: () => _t(translations.organization.Location),
  'Postal code': () => _t(translations.organization['Postal code']),
  isDefault: () => _t(translations.organization.isDefault),
  remove: () => _t(translations.common.remove),
  item: () => _t(translations.common.item),
  address: () => _t(translations.organization.Address),
  update: () => _t(translations.common.update),
  organisations: () => _t(translations.organization.Organizations),
  Organization: () => _t(translations.organization.Organization),
  'Company name': () => _t(translations.organization['Company name']),
  'Contact email': () => _t(translations.common['Contact email']),
  'Contact number': () => _t(translations.common['Contact number']),
  'Business registration number': () => _t(translations.organization['Business registration number']),
  'Business address': () => _t(translations.organization['Business address']),
  'Billing address': () => _t(translations.organization['Billing address']),
  'Country of operations': () => _t(translations.organization['Country of operations']),
  'Office address': () => _t(translations.organization['Office address']),
  'Contact person name': () => _t(translations.organization['Contact person name']),
  'Contract person designation': () => _t(translations.organization['Contract person designation']),
  Division: () => _t(translations.Division.Division),
  TypeToFind: () => _t(translations.common.TypeToFind),
  CreateNewDepartment: () => _t(translations.Department.CreateNewDepartment),
  Department: () => _t(translations.Department.Department),
  RemoveThisItem: () => _t(translations.common.RemoveThisItem),
  AddDepartmentSuccess: () => _t(translations.Department.AddDepartmentSuccess),
  RemovedDepartment: () => _t(translations.Department.RemovedDepartment),
  hold_on: () => _t(translations.common.hold_on),
  draft: () => _t(translations.status.draft),

  'Job title': () => _t(translations.job['Job title']),

  'Start date': () => _t(translations.job['Start date']),
  'Closed date': () => _t(translations.job['Closed date']),
  'Min salary': () => _t(translations.job['Min salary']),
  'Max salary': () => _t(translations.job['Max salary']),
  'Created by': () => _t(translations.job['Created by']),
  'Modified by': () => _t(translations.job['Modified by']),
  'Create new job': () => _t(translations.job['Create new job']),
  Title: () => _t(translations.job.Title),
  Openings: () => _t(translations.job.Openings),
  StartClose: () => _t(translations.job['Start-Close']),
  Salary: () => _t(translations.job.Salary),
  filter_data: () => _t(translations.common.filter_data),
  created_date_from: () => _t(translations.common.created_date_from),
  created_date_to: () => _t(translations.common.created_date_to),
  Status: () => _t(translations.common.Status),
  orgJobsPage: () => _t(translations.organization['Jobs In An Organization page']),
  active: () => _t(translations.status.active),
  'on-hold': () => _t(translations.status['on-hold']),
  closed: () => _t(translations.status.closed),
  AddSkills: () => _t(translations.job.AddSkills),
  'Select skills': () => _t(translations.job['Select skills'])
}
